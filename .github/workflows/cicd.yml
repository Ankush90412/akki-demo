# This is a basic workflow to help you get started with Actions:

name: Education Plus CI/Cd

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ main, staging , dev]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Deploy on WP-Engine
        env: # Or as an environment variable
          WP_ENGINE_EDUCATION_PLUS: ${{ secrets.WP_ENGINE_EDUCATION_PLUS }}
          PROD: educationplusp
          STAG: educationplstg
          DEV: educationplusd
          REPO_NAME: ${{ github.repository }}
          BRANCH_BASE: ${{ github.ref_name }}
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          TEAMS_WEBHOOK_URL_RAJATJINDAL: ${{ secrets.TEAMS_WEBHOOK_URL_RAJATJINDAL }}
        run: |
          chmod +x "${GITHUB_WORKSPACE}/.github/scripts/pre-deployment-teams-notify.sh"
          "${GITHUB_WORKSPACE}/.github/scripts/pre-deployment-teams-notify.sh"

          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          cd $GITHUB_WORKSPACE
          git checkout $BRANCH_NAME
          if [ $BRANCH_NAME == "main" ]; then DEPLOY=${PROD}; elif [ $BRANCH_NAME == "staging" ]; then DEPLOY=${STAG}; elif [ $BRANCH_NAME == "dev" ]; then DEPLOY=${DEV}; else exit; fi
          mkdir ~/.ssh
          echo $WP_ENGINE_EDUCATION_PLUS | base64 --decode >> ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H -p 22 git.wpengine.com >> ~/.ssh/known_hosts
          git fetch --unshallow origin  # Fetch complete history
          git add .
          git remote add production git@git.wpengine.com:production/${DEPLOY}.git
          git push -f production $BRANCH_NAME

          chmod +x "${GITHUB_WORKSPACE}/.github/scripts/post-deployment-teams-notify.sh"
          "${GITHUB_WORKSPACE}/.github/scripts/post-deployment-teams-notify.sh"
